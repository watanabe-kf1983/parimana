services:
  command:
    build:
      context: ./back
    environment:
      STORAGE__TYPE: "file"
      STORAGE__ROOT_DIR: "/var/parimana/.storage"
      REDIS_ENDPOINT: "task-db:6379"
    volumes:
      - ./.storage:/var/parimana/.storage
    entrypoint: ["tail", "-f", "/dev/null"]
    restart: always

  api:
    build:
      context: ./back
    ports:
      - "5000:5000"
    environment:
      STORAGE__TYPE: "file"
      STORAGE__ROOT_DIR: "/var/parimana/.storage"
      REDIS_ENDPOINT: "task-db:6379"
    volumes:
      - ./.storage:/var/parimana/.storage
    depends_on:
      - task-db
    entrypoint:
      [
        "dockerize",
        "-wait",
        "tcp://task-db:6379",
        "-timeout",
        "30s"
      ]
    command: [ "parimana", "web" ]
    restart: always

  worker:
    build:
      context: ./back
    environment:
      STORAGE__TYPE: "file"
      STORAGE__ROOT_DIR: "/var/parimana/.storage"
      REDIS_ENDPOINT: "task-db:6379"
    volumes:
      - ./.storage:/var/parimana/.storage
    depends_on:
      - task-db
    entrypoint:
      [
        "dockerize",
        "-wait",
        "tcp://task-db:6379",
        "-timeout",
        "30s"
      ]
    command: [ "parimana", "worker" ]
    restart: always

  worker-monitor:
    build:
      context: ./back
    environment:
      REDIS_ENDPOINT: "task-db:6379"
      FLOWER_PURGE_OFFLINE_WORKERS: 60
    depends_on:
      - task-db
    command: [ "parimana", "monitor" ]
    ports:
      - "5555:5555"
    restart: always

  task-db:
    image: redis
    restart: always

  front:
    build:
      context: ./front
    ports:
      - "8607:80"
    depends_on:
      - api
    restart: always
